#!/bin/bash
# Example:
#   ARM Deployment:
#     For RPi on x86 Machine: ./bin/deploy prod           (Cross compiles via `cross` & sends to raspberrypi.local)
#     For RPi on ARM Machine: ./bin/deploy prod           (Cross compiles with native tools & sends to raspberrypi.local)
#     For RPi CI Machine BUILD_GITHUB=1 ./bin/deploy prod (Cross compiles on Github Action & sends to raspberrypi.local)
#   x86 Linux Deploy:
#     ARCH=x86_64-unknown-linux-gnu ./bin/deploy prod server.local
#
set -e

ARM_ARCH=armv7-unknown-linux-gnueabihf
env=${1:-dev}
host=${2:-raspberrypi.local}
on_github=${BUILD_GITHUB:-0}
arch=${ARCH:-$ARM_ARCH}

echo "Building binary for $arch..."
if [[ on_github == 1 && $ARCH == $ARM_ARCH ]]; then
  echo "Using Github Release"
  echo "Downloading release..."
  tmp=$(mktemp -d -t tmp)
  wrk=$(pwd)
  cd $tmp
  curl -s https://api.github.com/repos/dfontana/disbot/releases/latest \
    | jq -r '.assets[].browser_download_url | select(test("tar.gz$"))' \
    | xargs curl -LJO
  tar -xvzf *
  cd $wrk
  mkdir -p target/armv7-unknown-linux-gnueabihf/release
  mv $tmp/disbot target/armv7-unknown-linux-gnueabihf/release/disbot
  rm -r $tmp 
elif [[ $(uname -p) == 'arm' ]]; then
  echo "Building with Native Toolchains..."
  if [[ $ARCH == $ARM_ARCH ]]; then
    source ./bin/build_for_arm
  else
    source ./bin/build_for_x86_64
  fi
elif [[ $ARCH == $ARM_ARCH ]]; then
  echo "Cross Compiling..."
  cross build --release --target $ARCH
else 
  echo "Compiling Natively..."
  RUSTFLAGS=-Awarnings cargo build --quiet --release
fi

if [[ ! -f "target/$ARCH/release/disbot" || ! -f "$env.env" ]]; then
  echo "Missing necessary files, not touching server";
  exit 1
fi

echo "Binary built."
echo "Coping files to remote $host..."
ssh $USER@$host 'mkdir -p ~/deploy'
scp "$env.env" $USER@$host:~/deploy/
echo "Restarting disbot-$env service on $host"
ssh -t $USER@$host 'sudo systemctl stop '"disbot-$env"
scp target/$ARCH/release/disbot $USER@$host:~/deploy/"disbot-$env"
ssh -t $USER@$host 'sudo systemctl restart '"disbot-$env"
echo "Done."

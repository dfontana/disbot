#!/bin/bash
set -e

env=${1:-dev}
host=${2:-raspberrypi.local}
on_github=${BUILD_GITHUB:-0}

echo "Building binary..."
if [[ on_github == 1 ]]; then
  echo "Using Github Release"
  echo "Downloading release..."
  tmp=$(mktemp -d -t tmp)
  wrk=$(pwd)
  cd $tmp
  curl -s https://api.github.com/repos/dfontana/disbot/releases/latest \
    | jq -r '.assets[].browser_download_url | select(test("tar.gz$"))' \
    | xargs curl -LJO
  tar -xvzf *
  cd $wrk
  mkdir -p target/armv7-unknown-linux-gnueabihf/release
  mv $tmp/disbot target/armv7-unknown-linux-gnueabihf/release/disbot
  rm -r $tmp 
elif [[ $(uname -p) == 'arm' ]]; then
  echo "Building with Native Toolchains..."
  source ./bin/build
else
  echo "Cross Compiling..."
  cross build --release --target armv7-unknown-linux-gnueabihf
fi
echo "Binary built."
echo "Coping files to remote $host..."
ssh $USER@$host 'mkdir -p ~/deploy'
scp "$env.env" $USER@$host:~/deploy/
echo "Restarting disbot-$env service on $host"
ssh -t $USER@$host 'sudo systemctl stop '"disbot-$env"
scp target/armv7-unknown-linux-gnueabihf/release/disbot $USER@$host:~/deploy/"disbot-$env"
ssh -t $USER@$host 'sudo systemctl restart '"disbot-$env"
echo "Done."
